---
- name: Setup catalogue microserivce
  hosts: catalogue
  become: yes
  tasks:
    # - name: Disable nodejs package using dnf module
    #   ansible.builtin.dnf:
    #     name: nodejs
    #     state: absent
    # - name: Add nodejs package using dnf module
    #   ansible.builtin.dnf:
    #     name: "nodejs-18.*"
    #     state: present

    - name: Disable nodejs package using command module
      ansible.builtin.command: dnf module disable nodejs -y   
    - name: Add nodejs 18 package using command module
      ansible.builtin.command: dnf module enable nodejs:18 -y

    # - name: disable old nodejs and enable nodejs using shell module
    #   ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

    - name: install nodejs 18
      ansible.builtin.package:
        name: nodejs
        state: present

    - name: add roboshop user
      ansible.builtin.user:
        name: roboshop
    
    - name: Create a app directory if it does not exist for roboshop
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download catalogue application source code zip file
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
        dest: /tmp
    
    - name: Extract catalogue.zip to /app directory
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes
    
    - name: install dependencies
      ansible.builtin.command: npm install 
      args:
        chdir: /app

    - name: copy catalogue svc file
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system

    - name: realod daemon
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Copy mongodb repo
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo


    - name: install mongo shell
      ansible.builtin.package:
        name: mongodb-org-shell
        state: present
    
    # Need to laod the mongo db
    - name: load mongodb test
      ansible.builtin.command: mongo --host mongodb.saitejag.site --quiet --eval 'db.getSiblingDB("catalogue").products.count()'
      register: product_count

    # - name: print product count
    #   ansible.builtin.debug:
    #     msg: "product count is: {{product_count}}"

    - name: load mongodb
      ansible.builtin.command: mongo --host mongodb.saitejag.site:27017 < /app/schema/catalogue.js
      when: product_count.stdout == "0"

    - name: start and enable catalogue
      ansible.builtin.service:
        name: catalogue
        state: started
        enabled: yes
